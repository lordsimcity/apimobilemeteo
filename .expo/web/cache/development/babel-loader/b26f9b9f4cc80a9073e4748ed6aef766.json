{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar API_TOKEN = 'beff0b2665689f298e408220eda60e6d3febb2a72b1e16cca5d1e2ec39df9f14';\n\nvar App = function App() {\n  var getCall = function getCall() {\n    axios.get('https://api.meteo-concept.com/api/location/city?token=' + API_TOKEN + '&insee=35238').then(function (response) {\n      alert(JSON.stringify(response.data));\n    });\n  };\n\n  var getCallWithStatus = function getCallWithStatus() {\n    var response;\n    return _regeneratorRuntime.async(function getCallWithStatus$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get('https://api.meteo-concept.com/api/location/city?token=' + API_TOKEN + '&insee=35238'));\n\n          case 3:\n            response = _context.sent;\n            alert('Code réponse : ' + JSON.stringify(response.status));\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0.message);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var getCallStrasbourgWithStatus = function getCallStrasbourgWithStatus() {\n    axios.get('https://api.meteo-concept.com/api/location/city?token=' + API_TOKEN + '&insee=67482').then(function (response) {\n      alert('Code réponse : ' + JSON.stringify(response.status) + ' ' + 'Info Strasbourg : ' + JSON.stringify(response.data));\n    });\n  };\n\n  var getCallStrasbourgWithSun = function getCallStrasbourgWithSun() {\n    axios.get('https://api.meteo-concept.com/api/ephemeride/0?token=' + API_TOKEN + '&insee=67482').then(function (response) {\n      alert('Heure du levé de soleil : ' + JSON.stringify(response.data.ephemeride.sunrise) + ' ' + 'Heure du couché de soleil : ' + JSON.stringify(response.data.ephemeride.sunset));\n    });\n  };\n\n  var getCallStrasbourgNextHours = function getCallStrasbourgNextHours() {\n    axios.get('https://api.meteo-concept.com/api/forecast/nextHours?token=' + API_TOKEN + '&insee=67482').then(function (response) {\n      alert('Informations importantes pour les 12 prochaines heures : ' + JSON.stringify(response.data.forecast));\n    });\n  };\n\n  var getCallStrasbourgWeather = function getCallStrasbourgWeather() {\n    axios.get('https://api.meteo-concept.com/api/http://forecast/daily/0/hours?token=' + API_TOKEN + '&insee=67482').then(function (response) {\n      alert('Weather codes Temps sensible cette nuit à Strasbourg : ' + JSON.stringify(response.data.forecast.weather));\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 30,\n        textAlign: 'center'\n      },\n      children: \"Application m\\xE9t\\xE9o\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttonStyle,\n      onPress: getCall,\n      children: _jsx(Text, {\n        children: \"Requete GET\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttonStyle,\n      onPress: getCallStrasbourgWithStatus,\n      children: _jsx(Text, {\n        children: \"Requete de la ville de Strasbourg + Code retour\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttonStyle,\n      onPress: getCallStrasbourgWithSun,\n      children: _jsx(Text, {\n        children: \"Lev\\xE9 et couch\\xE9 de soleil\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttonStyle,\n      onPress: getCallStrasbourgNextHours,\n      children: _jsx(Text, {\n        children: \"Informations m\\xE9t\\xE9o sur les prochaines heures \\xE0 Strasbourg\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttonStyle,\n      onPress: getCallStrasbourgWeather,\n      children: _jsx(Text, {\n        children: \"Donn\\xE9e weather cette nuit \\xE0 Strasbourg\"\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    flex: 1,\n    padding: 16\n  },\n  buttonStyle: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 10,\n    width: '100%',\n    marginTop: 16\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/bwinc/Documents/COURS/Bachelor AGIR/ReactNative/APImobile/MeteoReact/App.js"],"names":["React","axios","API_TOKEN","App","getCall","get","then","response","alert","JSON","stringify","data","getCallWithStatus","status","message","getCallStrasbourgWithStatus","getCallStrasbourgWithSun","ephemeride","sunrise","sunset","getCallStrasbourgNextHours","forecast","getCallStrasbourgWeather","weather","styles","container","fontSize","textAlign","buttonStyle","StyleSheet","create","justifyContent","flex","padding","alignItems","backgroundColor","width","marginTop"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, View, TouchableOpacity, Text } from 'react-native'\r\nimport axios from 'axios'\r\n\r\nconst API_TOKEN =\r\n  'beff0b2665689f298e408220eda60e6d3febb2a72b1e16cca5d1e2ec39df9f14'\r\n\r\nconst App = () => {\r\n  const getCall = () => {\r\n    axios\r\n      .get(\r\n        'https://api.meteo-concept.com/api/location/city?token=' +\r\n          API_TOKEN +\r\n          '&insee=35238'\r\n      )\r\n      .then(function (response) {\r\n        alert(JSON.stringify(response.data))\r\n      })\r\n  }\r\n\r\n  const getCallWithStatus = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://api.meteo-concept.com/api/location/city?token=' +\r\n          API_TOKEN +\r\n          '&insee=35238'\r\n      )\r\n      alert('Code réponse : ' + JSON.stringify(response.status))\r\n    } catch (error) {\r\n      alert(error.message)\r\n    }\r\n  }\r\n\r\n  const getCallStrasbourgWithStatus = () => {\r\n    axios\r\n      .get(\r\n        'https://api.meteo-concept.com/api/location/city?token=' +\r\n          API_TOKEN +\r\n          '&insee=67482'\r\n      )\r\n      .then(function (response) {\r\n        alert(\r\n          'Code réponse : ' +\r\n            JSON.stringify(response.status) +\r\n            ' ' +\r\n            'Info Strasbourg : ' +\r\n            JSON.stringify(response.data)\r\n        )\r\n      })\r\n  }\r\n\r\n  const getCallStrasbourgWithSun = () => {\r\n    axios\r\n      .get(\r\n        'https://api.meteo-concept.com/api/ephemeride/0?token=' +\r\n          API_TOKEN +\r\n          '&insee=67482'\r\n      )\r\n      .then(function (response) {\r\n        alert(\r\n          'Heure du levé de soleil : ' +\r\n            JSON.stringify(response.data.ephemeride.sunrise) +\r\n            ' ' +\r\n            'Heure du couché de soleil : ' +\r\n            JSON.stringify(response.data.ephemeride.sunset)\r\n        )\r\n      })\r\n  }\r\n\r\n  const getCallStrasbourgNextHours = () => {\r\n    axios\r\n      .get(\r\n        'https://api.meteo-concept.com/api/forecast/nextHours?token=' +\r\n          API_TOKEN +\r\n          '&insee=67482'\r\n      )\r\n      .then(function (response) {\r\n        alert(\r\n          'Informations importantes pour les 12 prochaines heures : ' +\r\n            JSON.stringify(response.data.forecast)\r\n        )\r\n      })\r\n  }\r\n\r\n  const getCallStrasbourgWeather = () => {\r\n    axios\r\n      .get(\r\n        'https://api.meteo-concept.com/api/http://forecast/daily/0/hours?token=' +\r\n          API_TOKEN +\r\n          '&insee=67482'\r\n      )\r\n      .then(function (response) {\r\n        alert(\r\n          'Weather codes Temps sensible cette nuit à Strasbourg : ' +\r\n            JSON.stringify(response.data.forecast.weather)\r\n        )\r\n      })\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={{ fontSize: 30, textAlign: 'center' }}>\r\n        Application météo\r\n      </Text>\r\n      {/*Running GET Request*/}\r\n      <TouchableOpacity style={styles.buttonStyle} onPress={getCall}>\r\n        <Text>Requete GET</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={styles.buttonStyle}\r\n        onPress={getCallStrasbourgWithStatus}\r\n      >\r\n        <Text>Requete de la ville de Strasbourg + Code retour</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={styles.buttonStyle}\r\n        onPress={getCallStrasbourgWithSun}\r\n      >\r\n        <Text>Levé et couché de soleil</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={styles.buttonStyle}\r\n        onPress={getCallStrasbourgNextHours}\r\n      >\r\n        <Text>Informations météo sur les prochaines heures à Strasbourg</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={styles.buttonStyle}\r\n        onPress={getCallStrasbourgWeather}\r\n      >\r\n        <Text>Donnée weather cette nuit à Strasbourg</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: 'center',\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  buttonStyle: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#DDDDDD',\r\n    padding: 10,\r\n    width: '100%',\r\n    marginTop: 16,\r\n  },\r\n})\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}